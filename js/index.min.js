"use strict";function _toConsumableArray(a){if(Array.isArray(a)){for(var b=0,c=Array(a.length);b<a.length;b++)c[b]=a[b];return c}return Array.from(a)}var playing=!0,timer=function(){return setInterval(function(){var a=document.getElementById("counter"),b=parseInt(a.innerText);a.innerText=b+1},1e3)},interval=timer(),minus=document.getElementById("minus"),plus=document.getElementById("plus"),heart=document.getElementById("heart"),pause=document.getElementById("pause"),commentForm=document.getElementsByTagName("form")[0];minus.addEventListener("click",function(){var a=document.getElementById("counter"),b=parseInt(a.innerText);a.innerText=b-1}),plus.addEventListener("click",function(){var a=document.getElementById("counter"),b=parseInt(a.innerText);a.innerText=b+1}),heart.addEventListener("click",function(){var a=document.getElementById("counter"),b=parseInt(a.innerText),c=document.querySelector(".likes"),d=void 0;if([].concat(_toConsumableArray(c.children)).map(function(a){return parseInt(a.dataset.num)}).includes(b)){d=document.querySelector('[data-num="'+b+'"]');var e=parseInt(d.children[0].innerText);d.innerHTML=b+" has been liked <span>"+(e+1)+"</span> times"}else(d=document.createElement("li")).setAttribute("data-num",b),d.innerHTML=b+" has been liked <span>1</span> time",c.appendChild(d)}),pause.addEventListener("click",function(){playing?(playing=!1,clearInterval(interval),this.innerText="resume"):(playing=!0,interval=timer(),this.innerText="pause"),[].concat(_toConsumableArray(document.getElementsByTagName("button"))).forEach(function(a){"pause"!==a.id&&(a.disabled=!playing)})}),commentForm.addEventListener("submit",function(a){a.preventDefault();var b=this.children[0],c=b.value;b.value="";var d=document.querySelector(".comments"),e=document.createElement("p");e.innerText=c,d.appendChild(e)});
document.addEventListener('DOMContentLoaded', function() {
    // DOM elements
    const counterDisplay = document.getElementById('counter');
    const minusButton = document.getElementById('minus');
    const plusButton = document.getElementById('plus');
    const heartButton = document.getElementById('heart');
    const pauseButton = document.getElementById('pause');
    const likesList = document.querySelector('.likes');
    const commentForm = document.getElementById('comment-form');
    const commentInput = document.getElementById('comment-input');
    const submitButton = document.getElementById('submit');
  
    // Initial counter value and state
    let counter = 0;
    let timer;
  
    // Function to start the counter
    function startCounter() {
      timer = setInterval(() => {
        counter++;
        counterDisplay.textContent = counter;
      }, 1000);
    }
  
    // Function to stop the counter
    function stopCounter() {
      clearInterval(timer);
    }
  
    // Function to handle clicking the pause/resume button
    function togglePause() {
      if (pauseButton.textContent === 'pause') {
        stopCounter();
        disableButtons();
        pauseButton.textContent = 'resume';
      } else {
        startCounter();
        enableButtons();
        pauseButton.textContent = 'pause';
      }
    }
  
    // Function to disable all buttons except the pause button
    function disableButtons() {
      minusButton.disabled = true;
      plusButton.disabled = true;
      heartButton.disabled = true;
      submitButton.disabled = true;
    }
  
    // Function to enable all buttons
    function enableButtons() {
      minusButton.disabled = false;
      plusButton.disabled = false;
      heartButton.disabled = false;
      submitButton.disabled = false;
    }
  
    // Event listener for minus button
    minusButton.addEventListener('click', () => {
      counter--;
      counterDisplay.textContent = counter;
    });
  
    // Event listener for plus button
    plusButton.addEventListener('click', () => {
      counter++;
      counterDisplay.textContent = counter;
    });
  
    // Event listener for heart button
    heartButton.addEventListener('click', () => {
      const li = document.createElement('li');
      li.textContent = `${counter} has been liked.`;
      likesList.appendChild(li);
    });
  
    // Event listener for pause button
    pauseButton.addEventListener('click', togglePause);
  
    // Event listener for comment form submission
    commentForm.addEventListener('submit', (event) => {
      event.preventDefault();
      const comment = commentInput.value.trim();
      if (comment !== '') {
        const commentDiv = document.createElement('div');
        commentDiv.textContent = comment;
        document.getElementById('list').appendChild(commentDiv);
        commentInput.value = ''; // Clear input after submission
      }
    });
  
    // Start the counter initially
    startCounter();
  });